<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-09T00:09:10 IST" name="Suite" finished-at="2025-04-09T00:14:20 IST" duration-ms="310024">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-04-09T00:09:10 IST" name="Test" finished-at="2025-04-09T00:14:20 IST" duration-ms="310024">
      <class name="com.magicbricks.runner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:09:10 IST" name="setUpClass" finished-at="2025-04-09T00:09:11 IST" duration-ms="791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@571db8b4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:09:11 IST" name="setup" finished-at="2025-04-09T00:09:11 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:09:11 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-09T00:10:42 IST" duration-ms="91354" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User gets proper estimation of price based on entered details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify proper estimation of price"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Estimation] but found [Looks like we don't have data for this locality yet.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Estimation] but found [Looks like we don't have data for this locality yet.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.magicbricks.stepDefinition.MagicBricksBuyComponent.i_should_able_to_get_the_estimation_price(MagicBricksBuyComponent.java:449)
at âœ½.I should able to get the estimation price(file:///C:/CG_Training/new%20workspace/MagicBricksProject/src/test/resources/Features/A_buy_propworth_estimation.feature:41)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:10:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-09T00:11:12 IST" duration-ms="29882" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User gets an error message for missing total number of floors"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify proper estimation of price"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:11:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-09T00:12:22 IST" duration-ms="70008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["I log in with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:12:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-09T00:12:31 IST" duration-ms="8899" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["I log in with invalid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:12:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-09T00:13:12 IST" duration-ms="40290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["I log in with invalid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:13:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-09T00:13:23 IST" duration-ms="10956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["I search for a property with location"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Property Search and Filter"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:13:23 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-09T00:13:38 IST" duration-ms="15163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["I search for only Villas"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Property Search and Filter"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:13:38 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-09T00:13:51 IST" duration-ms="13076" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search properties within a specified budget range"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Property Search and Filter"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found in the current frame
  (Session info: chrome=135.0.7049.43)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [406779b1d4aefceea443b26b3a75dfd6, getElementText {id=f.F02D6E3691CEDF251BA5BDEF60F0B155.d.3A01813A853948824B439BD6EF6D7529.e.179}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.43, chrome: {chromedriverVersion: 135.0.7049.84 (6c019e560019..., userDataDir: C:\Windows\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54919}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54919/devtoo..., se:cdpVersion: 135.0.7049.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (406779b1d4aefceea443b26b3a75dfd6)] -> class name: mb-srp__card__price--amount]
Session ID: 406779b1d4aefceea443b26b3a75dfd6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found in the current frame
  (Session info: chrome=135.0.7049.43)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [406779b1d4aefceea443b26b3a75dfd6, getElementText {id=f.F02D6E3691CEDF251BA5BDEF60F0B155.d.3A01813A853948824B439BD6EF6D7529.e.179}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.43, chrome: {chromedriverVersion: 135.0.7049.84 (6c019e560019..., userDataDir: C:\Windows\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54919}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54919/devtoo..., se:cdpVersion: 135.0.7049.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (406779b1d4aefceea443b26b3a75dfd6)] -> class name: mb-srp__card__price--amount]
Session ID: 406779b1d4aefceea443b26b3a75dfd6
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:191)
at com.magicbricks.pages.PropertyForSale.checkRange(PropertyForSale.java:66)
at com.magicbricks.stepDefinition.MagicBricksBuyComponent.the_system_should_display_properties_with_prices_between_the_range_entered(MagicBricksBuyComponent.java:240)
at âœ½.the system should display properties with prices between the range entered(file:///C:/CG_Training/new%20workspace/MagicBricksProject/src/test/resources/Features/Buy_search_and_filter.feature:45)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:13:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-09T00:14:02 IST" duration-ms="11441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["As a buyer, I want to search for premium houses and check that some links are present"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Search for premium houses,verify links and calculate EMI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:14:02 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-09T00:14:20 IST" duration-ms="17642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["As a buyer, I want to verify the presence of the pie chart in the EMI Calculator"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Search for premium houses,verify links and calculate EMI"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.magicbricks.runner.TestRunner@5b3f61ff]" started-at="2025-04-09T00:14:20 IST" name="tearDownClass" finished-at="2025-04-09T00:14:20 IST" duration-ms="418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.magicbricks.runner.TestRunner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
